<?php
/**
 * Kumbia PHP Framework
 *
 * LICENSE
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://XXXXXXXX
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@zend.com so we can send you a copy immediately.
 *
 * @copyright  Copyright (c) 2005-2009 Kumbia Team (http://www.kumbiaphp.com)
 * @license    http://framework.zend.com/license/new-bsd     New BSD License
 */

/**
 * Se define el APP_PATH
 **/
define('APP_PATH', dirname(dirname(__FILE__)).'/');
/**
 * Se define el LIBRARY_PATH
 **/
define('LIBRARY_PATH', dirname(APP_PATH).'/library/');
/**
 * Se define el CORE_PATH de Kumbia
 **/
define('CORE_PATH', LIBRARY_PATH.'kumbia/');

chdir(APP_PATH);

/**
 * @see Kumbia
 **/
require_once CORE_PATH.'kumbia.php';
/**
 * @see KumbiaException
 **/
require_once CORE_PATH.'kumbia_exception.php';
/**
 * @see Builder
 **/
require_once CORE_PATH.'builder/builder.php';
/**
 * @see Util
 **/
require_once CORE_PATH.'helpers/util.php';

try {
    if(!isset($argv[1])) {
        throw new KumbiaException("No se ha indicado el builder a ejecutar");
    }
    
    $builder= $argv[1];
    $params = Util::get_term_params($argv, 2);
    Builder::build($builder, $argv[2], $params);
} catch (Exception $e) {
    echo "Exception: {$e->getMessage()}\r\n";
    $i = 1;
    foreach($e->getTrace() as $trace){
        if($trace['class']){
            echo "#$i {$trace['class']}::{$trace['function']}(".join(",",$trace['args']).") en ".basename($trace['file'])."\n";
        }
        $i++;
    }
}